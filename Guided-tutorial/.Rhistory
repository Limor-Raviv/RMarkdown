knitr::opts_chunk$set(echo = FALSE)
knitr::include_graphics("RMarkdown.png") # I can insert a picture which is in the wd
knitr::include_graphics("newRMD.png")
knitr::include_graphics("markdown.png")
knitr::include_graphics("code_chunks.png")
knitr::include_graphics("RMarkdown.png")
#in your report, there will be things you don't want to be shown, like which packages you load.
#use include=FALSE to just run the code but not the output &/or code
#packages
library(ggplot2) #plots
library(dplyr) #tidying
library(lme4) #mixed effect models
library(knitr) #for pretty tables
library(effects) #for plotting model output
#install.packages("kableExtra")
library(kableExtra)
## if ever you don't have a package, install it with a command like this
#install.packages('ggplot2')
## also load in a function to round and make prettier output for p-values
#reportP function
reportP <- function(pValue){
if (pValue < 0.01){
result <- "p<0.001"
} else {
result <- sprintf("p=%.3f", pValue) # inserts a float into a string and simultaneously do rounding
}
return(result)
}
knitr::include_graphics("Titanic.jpg")
#let's load the provided dataset Titanic which comes from Kaggle (different from the built-in one, in that it's been cleaned up)
#Titanic<-read.csv("D:/RMarkDownTutorial_RladiesNijmegen/Titanic.csv",stringsAsFactors = FALSE)
## LEB: this is what works for me:
## EZ: for me too -- let's encourage everyone to download the whole folder and use the R Project
Titanic<-read.csv("Titanic.csv",stringsAsFactors = FALSE)
# Let's move the features Survived, Pclass, Sex, Embarked to be factors
cols<-c("Survived","Pclass","Sex","Embarked") # I create a vector and the function behind will turn all the variables into factors
for (i in cols){
Titanic[,i] <- as.factor(Titanic[,i])
}
#from this code chunk, we would like to see the output, but not the code, printed in the report.
#use echo=FALSE
str(Titanic)
# First, let's look at the relationship between sex and survival
## use ggplot to make a summary bar plot
a<-ggplot(data = Titanic,aes(x=Sex,fill=Survived))+geom_bar()
#save plot
ggsave("Factor_Sex.png", plot = last_plot(), device = NULL, path = NULL,
scale = 1, width = NA, height = NA, units = c("in", "cm", "mm"),
dpi = 300, limitsize = TRUE)
knitr::include_graphics("Factor_Sex.png")
# Survival as a function of social class
b<-ggplot(data = Titanic,aes(x=Pclass,fill=Survived))+geom_bar()+scale_x_discrete("Social Class")
#save plot
ggsave("Factor_SocialClass.png", plot = last_plot(), device = NULL, path = NULL,
scale = 1, width = NA, height = NA, units = c("in", "cm", "mm"),
dpi = 300, limitsize = TRUE)
knitr::include_graphics("Factor_SocialClass.png")
# percentage of survivals per class and gender
## the as.numeric(as.character()) trick is used to get an average of the factor levels zero and 1, to end up with a proportion of 1 = survived values.
summary_data <- Titanic %>%
group_by(Sex, Pclass) %>%
summarise( percentages= mean(as.numeric(as.character(Survived))*100), sd=sd(as.numeric(as.character(Survived))*100))
# Survival as a function of sex and class:
c<-ggplot(data = summary_data,aes(x=Pclass, y=percentages, fill=Sex))+geom_bar(stat="identity",width=.8, position = "dodge") +scale_x_discrete("Social Class")
#save plot
ggsave("Factor_Sex_SocialClass.png", plot = last_plot(), device = NULL, path = NULL,
scale = 1, width = NA, height = NA, units = c("in", "cm", "mm"),
dpi = 300, limitsize = TRUE)
knitr::include_graphics("Factor_Sex_SocialClass.png")
## Sara: what about just doing the mean age by gender and class?
summary_data2 <- Titanic %>%
group_by( Pclass, Sex) %>%
summarise( "Survived %"= round(mean(as.numeric(as.character(Survived))*100),2),
TotalN=n(), "Mean Age"=round(mean(Age),2),  "SE Age"=round(sd(Age)/sqrt(TotalN),2) )
#table using kable() function
summary_data2 %>%
kable() %>%
kable_styling(font_size= 20)
#with echo=FALSE you only show the output
#set contrasts
## this is something we need to do for regressions with factor (=categorical) predictors
## we will use 2 types: treatment coding (compare effect to a baseline) and sum-to-zero coding (compare effect to averages)
#Pclass--> as treatment coding with 2class as baseline
contr2vs1<-c(1,0,0)
contr2vs3<-c(0,0,1)
contrasts(Titanic$Pclass)= cbind(contr2vs1,contr2vs3)
#Sex--> sum-to-zero coding, 0.5 F, -0.5 M
contrasts(Titanic$Sex)=c(0.5, -0.5)
#glm model
simple_model<-glm (Survived~Pclass*Sex, family="binomial", data=Titanic)
#summary(simple_model)
#table using kable() function
coefficients(summary(simple_model))%>% round(4)%>%
kable() %>%
kable_styling(font_size = 20)
#prepare for inline information
simple_model.table<- coef(summary(simple_model))
#plot with Effects
i<-effect("Pclass*Sex", simple_model)
i.df <- as.data.frame(i)
g <- ggplot(i.df,aes(x=Pclass,y=fit,color=(Sex),ymin=lower,ymax=upper)) +
geom_pointrange(position=position_dodge(width=.1)) + #geom_smooth(method="lm",se=T,size=1)+
xlab("Social Class") + ylab("Survival") + ggtitle("Effect of Class, and Sex on Titanic Survival")
#save plot
ggsave("glm_results.png", plot = last_plot(), device = NULL, path = NULL,
scale = 1, width = NA, height = NA, units = c("in", "cm", "mm"),
dpi = 300, limitsize = TRUE)
knitr::include_graphics("glm_results.png")
